spring:
  application:
    name: plzdrawing
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: ${DATASOURCE_URL}
    username: ${DATASOURCE_USERNAME}
    password: ${DATASOURCE_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        #show_sql: true
        #format_sql: true
        default_batch_fetch_size: 1000
  jackson:
    time-zone: Asia/Seoul
  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}
  mail:
    host: ${MAIL_HOST}
    port: ${MAIL_PORT}
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true
          connectiontimeout: 5000
          timeout: 5000
          writetimeout: 5000
    auth-code-expiration: ${AUTH_CODE_EXPIRATION}
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            scope: email, profile
          kakao: # 클라이언트 ID/Secret 있는 provider 이름
            client-name: ${KAKAO_CLIENT_NAME}
            client-id: ${KAKAO_CLIENT_ID}
            client-secret: ${KAKAO_CLIENT_SECRET}
            redirect-uri: ${KAKAO_REDIRECT_URI}
            client-authentication-method: ${KAKAO_CLIENT_AUTHENTICATION_METHOD}
            authorization-grant-type: ${KAKAO_AUTHORIZATION_GRANT_TYPE}
            scope:
              - account_email
              - profile_nickname
        provider:
          kakao:
            authorization-uri: ${KAKAO_AUTHORIZATION_URI}
            token-uri: ${KAKAO_TOKEN_URI}
            user-info-uri: ${KAKAO_USER_INFO_URI}
            user-name-attribute: ${KAKAO_USER_NAME_ATTRIBUTE}


#Swagger
springdoc:
  default-consumes-media-type: application/json
  default-produces-media-type: application/json
  swagger-ui:
    path: /swagger-ui.html
    disable-swagger-default-url: true
    display-request-duration: true
    operations-sorter: alpha
    tags-sorter: alpha
server:
  port: 8080
  reactive:
    session:
      cookie:
        domain: ${COOKIE_DOMAIN}
        secure: ${COOKIE_SECURE}
        http-only: ${COOKIE_HTTP_ONLY}
        same-site: ${COOKIE_SAME_SITE}

#JWT
jwt:
  secret: ${SECRET_KEY}
  access-expiration: ${ACCESS_EXPIRATION}
  refresh-expiration: ${REFRESH_EXPIRATION}

member-redirect-url: ${MEMBER_REDIRECT_URL}

cloud:
  aws:
    credentials:
      access-key: ${S3_ACCESS_KEY}
      secret-key: ${S3_SECRET_KEY}
    region:
      static: ${S3_REGION}
    s3:
      bucket: ${S3_BUCKET_NAME}
    stack:
      auto: ${S3_STACK_AUTO}